name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, curl, xml

    - name: Install dependencies
      run: |
        composer install --no-interaction

    - name: Run tests
      run: |
        vendor/bin/phpunit --configuration phpunit.xml

    # - name: Run PHPStan
    #   run: |
    #     vendor/bin/phpstan analyse app --level=max

    # - name: Check connectivity
    #   run: |
    #     ping -c 4 109.234.166.50

    - name: Create .ssh directory
      run: |
        mkdir -p $HOME/.ssh
        echo "Directory created: $HOME/.ssh"

    - name: Check host connectivity
      continue-on-error: true
      run: |
        echo "Checking connectivity to deployment server..."
        if ping -c 2 -W 5 109.234.166.50 &>/dev/null; then
          echo "Host is reachable via ping"
        else
          echo "Warning: Host not responding to ping (this might be normal if ICMP is blocked)"
        fi
        
        if nc -z -w 5 109.234.166.50 22 &>/dev/null; then
          echo "SSH port is open and accessible"
        else
          echo "Warning: SSH port seems closed or filtered"
        fi

    - name: Add SSH host to known_hosts
      continue-on-error: true
      run: |
        echo "Attempting to scan SSH host key..."
        for i in {1..3}; do
          echo "Attempt $i to scan host key..."
          if ssh-keyscan -v -T 10 -H 109.234.166.50 >> $HOME/.ssh/known_hosts 2>&1; then
            echo "SSH host key successfully added to known_hosts."
            exit 0
          else
            echo "Attempt $i failed. Waiting before retry..."
            sleep 5
          fi
        done
        echo "Failed to scan host key after multiple attempts. Continuing anyway..."
        # Manually adding a placeholder to avoid host key verification in the deployment step
        echo "109.234.166.50 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA..." >> $HOME/.ssh/known_hosts

    - name: Set up SSH key
      run: |
        # IMPORTANT: Your private key should NOT have a passphrase for CI
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/id_rsa
        chmod 600 $HOME/.ssh/id_rsa
        # Start ssh-agent without prompting for passphrase
        eval "$(ssh-agent -s)"
        # Add key to agent without passphrase prompt
        ssh-add -q $HOME/.ssh/id_rsa 2>/dev/null || (echo "Error: Your SSH key has a passphrase. Generate a key without passphrase for CI." && exit 1)

    - name: Deploy to O2switch
      run: |
        # Add StrictHostKeyChecking=no to avoid host key verification issues
        ssh -o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=10 -v rame5605@109.234.166.50 "cd /home/rame5605/api.herbeginfos.fr && git pull origin main && composer install --no-dev" || echo "Connection failed: this may be due to IP restrictions on the server - verify that GitHub Actions IPs are allowed"
